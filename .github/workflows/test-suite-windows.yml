# Windows doesn't support Docker out-of-box so we can run mostly unit test
name: Test Suite on Windows

on:
  pull_request:
    paths:
      - '.github/workflows/**'
      - 'src/adapter/**'
      - 'src/core/**'
      - 'src/lib/**'
      - 'tools/**'
      - 'examples/**'
      - 'composer.lock'
  push:
    branches: [ 1.x ]
    paths-ignore:
      - 'CHANGELOG.md'

# See https://stackoverflow.com/a/72408109
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    name: "Tests"

    runs-on: "windows-latest"

    strategy:
      fail-fast: false
      matrix:
        dependencies:
          - "locked"
          - "lowest"
          - "highest"
        php-version:
          - "8.1"
          - "8.2"
          - "8.3"
          - "8.4"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          tools: composer:v2
          php-version: "${{ matrix.php-version }}"
          ini-values: memory_limit=-1
          extensions: :psr, bcmath, dom, hash, json, mbstring, xml, xmlwriter, xmlreader, zlib, sodium

      - name: "List PHP Extensions"
        run: php -m

      - name: "List PHP configuration"
        run: php -i

      - name: "Get Composer Cache Directory"
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: "Cache Composer dependencies"
        uses: "actions/cache@v4"
        with:
          path: "~\\AppData\\Roaming\\composer"
          key: "${{ runner.os }}-php-${{ matrix.php-version }}-${{ matrix.dependencies }}-composer-${{ hashFiles('**\\composer.lock') }}"
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php-version }}-${{ matrix.dependencies }}-composer-

      - name: "Install lowest dependencies"
        if: ${{ matrix.dependencies == 'lowest' }}
        run: "composer update --prefer-lowest --no-interaction --no-progress --no-suggest"

      - name: "Install highest dependencies"
        if: ${{ matrix.dependencies == 'highest' }}
        run: "composer update --no-interaction --no-progress --no-suggest"

      - name: "Install locked dependencies"
        if: ${{ matrix.dependencies == 'locked' }}
        run: "composer install --no-interaction --no-progress --no-suggest"

      # Please see note at top why only running unit tests
      - name: "Test"
        run: "composer test -- --testsuite unit"
